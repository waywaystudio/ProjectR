//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Project/Scripts/MainGame/Manager/Input/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @ProjectInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @ProjectInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Raid"",
            ""id"": ""ec986270-dd1c-4a6b-9c1e-b03287af00d6"",
            ""actions"": [
                {
                    ""name"": ""Keyboard1"",
                    ""type"": ""Button"",
                    ""id"": ""ed3f01f8-f9e3-4517-b9d0-6adbc55ddb3b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Keyboard2"",
                    ""type"": ""Button"",
                    ""id"": ""14d55dce-4530-4c2b-80f2-0ab0a6e08031"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Keyboard3"",
                    ""type"": ""Button"",
                    ""id"": ""c78e6d28-70e3-4580-996f-55f8fcd9801e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Keyboard4"",
                    ""type"": ""Button"",
                    ""id"": ""07a49b5c-9dcd-434e-875d-382c01b08aba"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Q"",
                    ""type"": ""Button"",
                    ""id"": ""e12c27fb-6985-4994-92ba-59b4b78c69fa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""W"",
                    ""type"": ""Button"",
                    ""id"": ""2762390e-adf7-4855-bdeb-e18db7bded43"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""E"",
                    ""type"": ""Button"",
                    ""id"": ""350f3ed7-915e-4bbb-b274-1bb43130b155"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""R"",
                    ""type"": ""Button"",
                    ""id"": ""27fac9d3-d67d-4e63-a79a-5407ca69496b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""A"",
                    ""type"": ""Button"",
                    ""id"": ""76871703-bbad-4679-a791-575277a06e95"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""S"",
                    ""type"": ""Button"",
                    ""id"": ""d574df1d-1482-4291-ab43-7e79cb926d63"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""D"",
                    ""type"": ""Button"",
                    ""id"": ""56e63df0-f233-4e0d-b2f7-7cdfea372a8f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""F"",
                    ""type"": ""Button"",
                    ""id"": ""248bce65-e161-4102-ac96-b0d0b54605c1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftMouse"",
                    ""type"": ""Button"",
                    ""id"": ""853538c5-eb7a-4337-9108-ce970b702399"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightMouse"",
                    ""type"": ""Button"",
                    ""id"": ""ea610a97-d8d0-44d7-a312-ac158f5cb1c3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftShift"",
                    ""type"": ""Button"",
                    ""id"": ""ca2ad597-d5e4-4874-89ff-95d24ceae7f9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Space"",
                    ""type"": ""Button"",
                    ""id"": ""0740fb93-83ef-4518-bbe2-f89cffe229bd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""35060e32-3622-407f-89b0-b09fe1716b67"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Q"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4ec27a60-5325-495b-a083-31b71e90fcc0"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""LeftMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1ad46865-d1b9-4c35-858c-39eea6d6d9fc"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""W"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e9f47330-aa28-409b-a56e-7e0b32573a3b"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""E"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0aa53c12-3d9d-4479-a959-a0a30293c4e4"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""R"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a06d9a79-6487-4c0c-8540-dcef7fd67e09"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""RightMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""adac1e59-5aff-4eaf-b426-ce90d39788a0"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""LeftShift"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dc35ec61-3833-437e-9d15-dc13493e7a39"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Keyboard1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""baebbfff-b6bf-4107-a6ab-b807dc600842"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Keyboard2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""07411b9c-f05e-4f55-84a8-4c925f8b2c00"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Keyboard3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4679a474-3148-4dc7-ac8a-b5c7ee472300"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Keyboard4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0b79c5b1-df3c-4ef9-842e-771ad0378fd5"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6b573739-8aa4-409d-9fc1-a627950b9eda"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""S"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0905fd1c-eafe-40f0-899f-3cc6446e43e4"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e36ac522-bb8c-43e7-95be-0a1a63992c52"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""F"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""05599afe-6747-46b5-b1a1-39c5a8df01e7"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Space"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""PC"",
            ""bindingGroup"": ""PC"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Raid
        m_Raid = asset.FindActionMap("Raid", throwIfNotFound: true);
        m_Raid_Keyboard1 = m_Raid.FindAction("Keyboard1", throwIfNotFound: true);
        m_Raid_Keyboard2 = m_Raid.FindAction("Keyboard2", throwIfNotFound: true);
        m_Raid_Keyboard3 = m_Raid.FindAction("Keyboard3", throwIfNotFound: true);
        m_Raid_Keyboard4 = m_Raid.FindAction("Keyboard4", throwIfNotFound: true);
        m_Raid_Q = m_Raid.FindAction("Q", throwIfNotFound: true);
        m_Raid_W = m_Raid.FindAction("W", throwIfNotFound: true);
        m_Raid_E = m_Raid.FindAction("E", throwIfNotFound: true);
        m_Raid_R = m_Raid.FindAction("R", throwIfNotFound: true);
        m_Raid_A = m_Raid.FindAction("A", throwIfNotFound: true);
        m_Raid_S = m_Raid.FindAction("S", throwIfNotFound: true);
        m_Raid_D = m_Raid.FindAction("D", throwIfNotFound: true);
        m_Raid_F = m_Raid.FindAction("F", throwIfNotFound: true);
        m_Raid_LeftMouse = m_Raid.FindAction("LeftMouse", throwIfNotFound: true);
        m_Raid_RightMouse = m_Raid.FindAction("RightMouse", throwIfNotFound: true);
        m_Raid_LeftShift = m_Raid.FindAction("LeftShift", throwIfNotFound: true);
        m_Raid_Space = m_Raid.FindAction("Space", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Raid
    private readonly InputActionMap m_Raid;
    private IRaidActions m_RaidActionsCallbackInterface;
    private readonly InputAction m_Raid_Keyboard1;
    private readonly InputAction m_Raid_Keyboard2;
    private readonly InputAction m_Raid_Keyboard3;
    private readonly InputAction m_Raid_Keyboard4;
    private readonly InputAction m_Raid_Q;
    private readonly InputAction m_Raid_W;
    private readonly InputAction m_Raid_E;
    private readonly InputAction m_Raid_R;
    private readonly InputAction m_Raid_A;
    private readonly InputAction m_Raid_S;
    private readonly InputAction m_Raid_D;
    private readonly InputAction m_Raid_F;
    private readonly InputAction m_Raid_LeftMouse;
    private readonly InputAction m_Raid_RightMouse;
    private readonly InputAction m_Raid_LeftShift;
    private readonly InputAction m_Raid_Space;
    public struct RaidActions
    {
        private @ProjectInput m_Wrapper;
        public RaidActions(@ProjectInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Keyboard1 => m_Wrapper.m_Raid_Keyboard1;
        public InputAction @Keyboard2 => m_Wrapper.m_Raid_Keyboard2;
        public InputAction @Keyboard3 => m_Wrapper.m_Raid_Keyboard3;
        public InputAction @Keyboard4 => m_Wrapper.m_Raid_Keyboard4;
        public InputAction @Q => m_Wrapper.m_Raid_Q;
        public InputAction @W => m_Wrapper.m_Raid_W;
        public InputAction @E => m_Wrapper.m_Raid_E;
        public InputAction @R => m_Wrapper.m_Raid_R;
        public InputAction @A => m_Wrapper.m_Raid_A;
        public InputAction @S => m_Wrapper.m_Raid_S;
        public InputAction @D => m_Wrapper.m_Raid_D;
        public InputAction @F => m_Wrapper.m_Raid_F;
        public InputAction @LeftMouse => m_Wrapper.m_Raid_LeftMouse;
        public InputAction @RightMouse => m_Wrapper.m_Raid_RightMouse;
        public InputAction @LeftShift => m_Wrapper.m_Raid_LeftShift;
        public InputAction @Space => m_Wrapper.m_Raid_Space;
        public InputActionMap Get() { return m_Wrapper.m_Raid; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(RaidActions set) { return set.Get(); }
        public void SetCallbacks(IRaidActions instance)
        {
            if (m_Wrapper.m_RaidActionsCallbackInterface != null)
            {
                @Keyboard1.started -= m_Wrapper.m_RaidActionsCallbackInterface.OnKeyboard1;
                @Keyboard1.performed -= m_Wrapper.m_RaidActionsCallbackInterface.OnKeyboard1;
                @Keyboard1.canceled -= m_Wrapper.m_RaidActionsCallbackInterface.OnKeyboard1;
                @Keyboard2.started -= m_Wrapper.m_RaidActionsCallbackInterface.OnKeyboard2;
                @Keyboard2.performed -= m_Wrapper.m_RaidActionsCallbackInterface.OnKeyboard2;
                @Keyboard2.canceled -= m_Wrapper.m_RaidActionsCallbackInterface.OnKeyboard2;
                @Keyboard3.started -= m_Wrapper.m_RaidActionsCallbackInterface.OnKeyboard3;
                @Keyboard3.performed -= m_Wrapper.m_RaidActionsCallbackInterface.OnKeyboard3;
                @Keyboard3.canceled -= m_Wrapper.m_RaidActionsCallbackInterface.OnKeyboard3;
                @Keyboard4.started -= m_Wrapper.m_RaidActionsCallbackInterface.OnKeyboard4;
                @Keyboard4.performed -= m_Wrapper.m_RaidActionsCallbackInterface.OnKeyboard4;
                @Keyboard4.canceled -= m_Wrapper.m_RaidActionsCallbackInterface.OnKeyboard4;
                @Q.started -= m_Wrapper.m_RaidActionsCallbackInterface.OnQ;
                @Q.performed -= m_Wrapper.m_RaidActionsCallbackInterface.OnQ;
                @Q.canceled -= m_Wrapper.m_RaidActionsCallbackInterface.OnQ;
                @W.started -= m_Wrapper.m_RaidActionsCallbackInterface.OnW;
                @W.performed -= m_Wrapper.m_RaidActionsCallbackInterface.OnW;
                @W.canceled -= m_Wrapper.m_RaidActionsCallbackInterface.OnW;
                @E.started -= m_Wrapper.m_RaidActionsCallbackInterface.OnE;
                @E.performed -= m_Wrapper.m_RaidActionsCallbackInterface.OnE;
                @E.canceled -= m_Wrapper.m_RaidActionsCallbackInterface.OnE;
                @R.started -= m_Wrapper.m_RaidActionsCallbackInterface.OnR;
                @R.performed -= m_Wrapper.m_RaidActionsCallbackInterface.OnR;
                @R.canceled -= m_Wrapper.m_RaidActionsCallbackInterface.OnR;
                @A.started -= m_Wrapper.m_RaidActionsCallbackInterface.OnA;
                @A.performed -= m_Wrapper.m_RaidActionsCallbackInterface.OnA;
                @A.canceled -= m_Wrapper.m_RaidActionsCallbackInterface.OnA;
                @S.started -= m_Wrapper.m_RaidActionsCallbackInterface.OnS;
                @S.performed -= m_Wrapper.m_RaidActionsCallbackInterface.OnS;
                @S.canceled -= m_Wrapper.m_RaidActionsCallbackInterface.OnS;
                @D.started -= m_Wrapper.m_RaidActionsCallbackInterface.OnD;
                @D.performed -= m_Wrapper.m_RaidActionsCallbackInterface.OnD;
                @D.canceled -= m_Wrapper.m_RaidActionsCallbackInterface.OnD;
                @F.started -= m_Wrapper.m_RaidActionsCallbackInterface.OnF;
                @F.performed -= m_Wrapper.m_RaidActionsCallbackInterface.OnF;
                @F.canceled -= m_Wrapper.m_RaidActionsCallbackInterface.OnF;
                @LeftMouse.started -= m_Wrapper.m_RaidActionsCallbackInterface.OnLeftMouse;
                @LeftMouse.performed -= m_Wrapper.m_RaidActionsCallbackInterface.OnLeftMouse;
                @LeftMouse.canceled -= m_Wrapper.m_RaidActionsCallbackInterface.OnLeftMouse;
                @RightMouse.started -= m_Wrapper.m_RaidActionsCallbackInterface.OnRightMouse;
                @RightMouse.performed -= m_Wrapper.m_RaidActionsCallbackInterface.OnRightMouse;
                @RightMouse.canceled -= m_Wrapper.m_RaidActionsCallbackInterface.OnRightMouse;
                @LeftShift.started -= m_Wrapper.m_RaidActionsCallbackInterface.OnLeftShift;
                @LeftShift.performed -= m_Wrapper.m_RaidActionsCallbackInterface.OnLeftShift;
                @LeftShift.canceled -= m_Wrapper.m_RaidActionsCallbackInterface.OnLeftShift;
                @Space.started -= m_Wrapper.m_RaidActionsCallbackInterface.OnSpace;
                @Space.performed -= m_Wrapper.m_RaidActionsCallbackInterface.OnSpace;
                @Space.canceled -= m_Wrapper.m_RaidActionsCallbackInterface.OnSpace;
            }
            m_Wrapper.m_RaidActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Keyboard1.started += instance.OnKeyboard1;
                @Keyboard1.performed += instance.OnKeyboard1;
                @Keyboard1.canceled += instance.OnKeyboard1;
                @Keyboard2.started += instance.OnKeyboard2;
                @Keyboard2.performed += instance.OnKeyboard2;
                @Keyboard2.canceled += instance.OnKeyboard2;
                @Keyboard3.started += instance.OnKeyboard3;
                @Keyboard3.performed += instance.OnKeyboard3;
                @Keyboard3.canceled += instance.OnKeyboard3;
                @Keyboard4.started += instance.OnKeyboard4;
                @Keyboard4.performed += instance.OnKeyboard4;
                @Keyboard4.canceled += instance.OnKeyboard4;
                @Q.started += instance.OnQ;
                @Q.performed += instance.OnQ;
                @Q.canceled += instance.OnQ;
                @W.started += instance.OnW;
                @W.performed += instance.OnW;
                @W.canceled += instance.OnW;
                @E.started += instance.OnE;
                @E.performed += instance.OnE;
                @E.canceled += instance.OnE;
                @R.started += instance.OnR;
                @R.performed += instance.OnR;
                @R.canceled += instance.OnR;
                @A.started += instance.OnA;
                @A.performed += instance.OnA;
                @A.canceled += instance.OnA;
                @S.started += instance.OnS;
                @S.performed += instance.OnS;
                @S.canceled += instance.OnS;
                @D.started += instance.OnD;
                @D.performed += instance.OnD;
                @D.canceled += instance.OnD;
                @F.started += instance.OnF;
                @F.performed += instance.OnF;
                @F.canceled += instance.OnF;
                @LeftMouse.started += instance.OnLeftMouse;
                @LeftMouse.performed += instance.OnLeftMouse;
                @LeftMouse.canceled += instance.OnLeftMouse;
                @RightMouse.started += instance.OnRightMouse;
                @RightMouse.performed += instance.OnRightMouse;
                @RightMouse.canceled += instance.OnRightMouse;
                @LeftShift.started += instance.OnLeftShift;
                @LeftShift.performed += instance.OnLeftShift;
                @LeftShift.canceled += instance.OnLeftShift;
                @Space.started += instance.OnSpace;
                @Space.performed += instance.OnSpace;
                @Space.canceled += instance.OnSpace;
            }
        }
    }
    public RaidActions @Raid => new RaidActions(this);
    private int m_PCSchemeIndex = -1;
    public InputControlScheme PCScheme
    {
        get
        {
            if (m_PCSchemeIndex == -1) m_PCSchemeIndex = asset.FindControlSchemeIndex("PC");
            return asset.controlSchemes[m_PCSchemeIndex];
        }
    }
    public interface IRaidActions
    {
        void OnKeyboard1(InputAction.CallbackContext context);
        void OnKeyboard2(InputAction.CallbackContext context);
        void OnKeyboard3(InputAction.CallbackContext context);
        void OnKeyboard4(InputAction.CallbackContext context);
        void OnQ(InputAction.CallbackContext context);
        void OnW(InputAction.CallbackContext context);
        void OnE(InputAction.CallbackContext context);
        void OnR(InputAction.CallbackContext context);
        void OnA(InputAction.CallbackContext context);
        void OnS(InputAction.CallbackContext context);
        void OnD(InputAction.CallbackContext context);
        void OnF(InputAction.CallbackContext context);
        void OnLeftMouse(InputAction.CallbackContext context);
        void OnRightMouse(InputAction.CallbackContext context);
        void OnLeftShift(InputAction.CallbackContext context);
        void OnSpace(InputAction.CallbackContext context);
    }
}
